# #
#       Задача "Записать и запомнить":
#   Создайте функцию custom_write(file_name, strings), которая принимает
#   аргументы file_name - название файла для записи, strings - список строк для записи.
#       Функция должна:
#     - Записывать в файл file_name все строки из списка strings, каждая на новой строке.
#     - Возвращать словарь strings_positions,
#       где ключом будет кортеж (<номер строки>, <байт начала строки>),
#       а значением - записываемая строка.
#       Для получения номера байта начала строки используйте метод tell() перед записью.
#
##
import os
###
def custom_write(file_name, strings) : #
    pass
    if not os.path.exists(file_name):  # если нет файла
        open(file_name, 'a').close()  # создаём
    name = file_name
    file = open(name, 'r')
    rfile = file.read()
    file.close()  # закрывает его и возвращает единую строку со всеми
    return rfile  # товарами из файла __file_name.
###
##
#
# Пример полученного словаря:
# {(1, 0): 'Text for tell.', (2, 16): 'Используйте кодировку utf-8.'}
# Где:
# 1, 2 - номера записанных строк.
# 0, 16 - номера байт, на которых началась запись строк.
# 'Text for tell.', 'Используйте кодировку utf-8.' - сами строки.
#
# Пример результата выполнения программы:
# Пример выполняемого кода:
# info = [
#     'Text for tell.',
#     'Используйте кодировку utf-8.',
#     'Because there are 2 languages!',
#     'Спасибо!'
#     ]
#
# result = custom_write('test.txt', info)
# for elem in result.items():
#   print(elem)
#
# Вывод на консоль:
# ((1, 0), 'Text for tell.')
# ((2, 16), 'Используйте кодировку utf-8.')
# ((3, 66), 'Because there are 2 languages!')
# ((4, 98), 'Спасибо!')
#
#  Как выглядит файл после запуска:
#   ВОТ ТАК

#
#   конец задачи
#
